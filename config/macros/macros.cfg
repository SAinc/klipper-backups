# Simple macros definitions

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

[gcode_macro MOTION_SYSTEM_TEST]
description: Runs a series of moves to test the motion system
gcode:
  {% if 'F' not in params %}
    {action_raise_error("Must provide feedrate!")}
  {% endif %}
  
  G0 X380 Y0 F{params.F|float}
  G0 X20
  G0 X380 Y360
  G0 X20
  G0 Y0
  G0 X380
  G0 Y360
  G0 X20

[gcode_macro PARK_TOOLHEAD]
description: Moves toolhead to the park position.
gcode:
  G0 X20 Y360 F60000  # Move to park position

[gcode_macro GOTO_PURGE]
description: Moves tool to purge bin and activates plate.
gcode:
  G0 X Y F60000 # Move to just in front of purge bin

[gcode_macro RUNOUT]
gcode:
  {% set tool = params.TOOL|int %}
  {% set load_temp = 250 %}

  # Change tool led to RED
  # Purge remaining filament 
  SET_LED LED=SO3RGB_T{tool} RED=1.0 GREEN=0 BLUE=0
  GOTO_PURGE
  M109 T{tool} S{load_temp}
  G1 E50 F900
  M104 T{tool} S0
  RESPOND MSG="Tool ready for reload."

[gcode_macro LOAD_FILAMENT]
description: Loads filament into the specified tool.
gcode:
  # Select tool
  # Move to purge bin
  # Heat nozzle
  # Wait for sensor (up to 1 min)
  # Purge
  # Retract
  # Turn off heaters
  # Move to park position
  # Put away tool

  {% if params.TOOL is defined %}
    {% set tool = params.TOOL|int %}
    {% set load_temp = 250 %}

    {% set flag = 0 %}

    G92 E0

    T{tool}  # Select tool
    GOTO_PURGE
    M109 T{tool} S{load_temp} # set nozzle temp and wait
    # Wait up to 60s for filament to be loaded
    {% for i in range(120) if not flag}
      {% if QUERY_FILAMENT_SENSOR SENSOR=filament_runout_T{tool} %}
        {% set flag=1 %}
      {% endif %}
      G4 P500 # Wait 500ms
    {% endfor %}

    {% if flag == 1 %}
      G1 E50 F900 # purge nozzle
      G10 # retract
      M104 T{tool} S0 # Turn off nozzle
      RESPOND MSG="Filament loaded."
      PARK_TOOLHEAD
      DESELECT_ALL
    {% else %}
      M104 T{tool} S0 # Turn off nozzle
      RESPOND TYPE=error MSG="Filament not detected! Heater turned off."
    {% endif %}