# Toolchanger definition

[toolchanger]
#save_current_tool: True
  #  If set, saves currently selected tool and makes it available for 
  # initialize gcode.
initialize_gcode: 
  #  Gcode to run on initialize. Typically used for homing any motors, or 
  #  reselecting saved tool.
  INITIALIZE_TOOLCHANGER TOOL_NAME={toolchanger.tool}
initialize_on: home
  # When this toolchanger gets initialized.
  #  - manual: only when INITIALIZE_TOOLCHANGER is called.
  #  - home: when homing the printer.
  #  - first-use: on first toolchange command.
verify_tool_pickup: False
  # If tool detection is available, will verify tool presence after pickp_gcode
require_tool_present: False
  # Raise error if no tool present on init or on unmount. 
  # Use in case the tool contains crucial sensors for the printer to operate/home.  
uses_axis: xy
  # Axis used by the tool change process
on_axis_not_homed: abort
  # When required axis are not homed
  # - abort: aborts the command
  # - home: attempts to home the axis
params_lock_angle: 140
params_unlock_angle: 10
params_safe_y: 360
params_feed_high: 60000
params_feed_low: 1500
# before_change_gcode:
  # Common gcode to run before any tool change   
after_change_gcode:
  # Common gcode to run after any tool change.
  # EG: To set custom input shaping, accelerations, etc. 
  {% if toolchanger.dropoff_tool is not "None" %} 
    SET_LED LED=SO3RGB_T{toolchanger.dropoff_tool} RED=1 GREEN=1 BLUE=0
  {% endif %}
  {% if toolchanger.pickup_tool is not "None" %}
    SET_LED LED=SO3RGB_T{toolchanger.pickup_tool} RED=0 GREEN=1 BLUE=1
  {% endif %}
  
error_gcode:
  PAUSE
  # If specified, this gcode is run on failures instead of erroring out Klipper 
  # Typical use would be to pause the print and put INITIALIZE_TOOLCHANGER in the resume macro to reset toolchanger.
# recover_gcode:
  # Experimental, if specified, this gcode is run on `INITIALIZE_TOOLCHANGER RECOVER=1` to recover the position.
  # Should not generally be necessary, but adds optional extra control.
# parent_tool:
  # Name of a parent tool. Marks this toolchanger as a child, meaning the parent tool
  # will be selected in order to select any tool attached to this.
  # Can be used for chaining multiple filament/tool changing techniques,
  # like IDEX plus an MMU attached to one of the hotends.
# parent_mounting_mode: parent-first 
  # How to mount parent when the tool is selected:
  # - parent-first - mount parent and then child
  # - child-first - mount child before parent can be mounted
# parent_unmounting_mode: lazy 
  # How to unmount parent when the tool is deselected:
  # - child-first - unmount child and then parent
  # - parent-first - unmount parent and then child
  # - lazy - no dot unmount the child unless a needed to mount a sibling
transfer_fan_speed: True
  # When tre, fan speed is transferred during toolchange. When false, fan speeds are not changed during toolchange.    

dropoff_gcode:
  # move to park zone for selected tool
  # move to engage position slowly
  # unlock tool
  # move back to park position slowly
  # lock tool

  SET_GCODE_OFFSET X=0 Y=0
  G90

  # Move to park position
  G0 X{tool.params_park_x} Y{tool.params_safe_y} F{tool.params_feed_high}
  G0 Y{tool.params_park_y-10}
  G0 Y{tool.params_park_y} F{tool.params_feed_low}

  # Unlock tool
  SET_SERVO SERVO=tool_lock_servo ANGLE={tool.params_unlock_angle}
  G4 P400

  # relock tool
  SET_SERVO SERVO=tool_lock_servo ANGLE={tool.params_lock_angle}

  # move back to park
  G0 Y{tool.params_safe_y} F{tool.params_feed_high}
  # SET_GCODE_OFFSET Z=0

pickup_gcode:
  # move to park zone for selected tool
  # unlock servo
  # move to engage position
  # lock tool
  # move back to park zone
  
  # wait for heater
  {% if tool.extruder %}
      M109 T{tool.tool_number} S{printer[tool.extruder].target|int}
  {% endif %}

  SET_GCODE_OFFSET X=0 Y=0
  #SAVE_GCODE_STATE NAME=TOOL_PICKUP
  G90

  # Move to park position
  SET_SERVO SERVO=tool_lock_servo ANGLE={tool.params_unlock_angle}
  G0 X{tool.params_park_x} Y{tool.params_safe_y} F{tool.params_feed_high}
  G0 Y{tool.params_park_y-5}
  G0 Y{tool.params_park_y} F{tool.params_feed_low}

  # Atach Tool
  SET_SERVO SERVO=tool_lock_servo ANGLE={tool.params_lock_angle}
  G4 P200

  # Tool Z Offset
  SET_GCODE_OFFSET Z={tool.gcode_z_offset} MOVE=1

  # Move to park position
  G0 Y{tool.params_park_y-5} F{tool.params_feed_low}
  G0 Y{tool.params_safe_y} F{tool.params_feed_high}

  # SET_GCODE_OFFSET X={tool.offset[0]} Y={tool.offset[1]} Z={tool.offset[2]} MOVE=0